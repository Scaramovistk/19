Ce projet a pour but de vous faire découvrir le merveilleux monde de la virtualisation.
Vous allez créer votre première machine en respectant des consignes précises et en
utilisant VirtualBox (ou UTM si VirtualBox ne fonctionne pas sur votre machine). Ainsi,
à la suite de ce projet, vous serez capable d’installer votre propre système d’exploitation
implémentant des règles strictes.

Telecharge version stable:
https://www.debian.org/

VM:
Nouvelle: ok pour tous
Config: reseau --> acces par pont
Stockage --> Debian --> choisir l iso debian

Lancer Debian:

1. instalation
Suivre les etapes d installation
Nom de la machine --> login42
domain --> enter
choisir mot de passe root
nom complet nouvel utilisateur: login
choisir mot de passe user
partion: Assiste chiffre --> partion /home separe --> ecrire modif oui 
Quantite d espace 7.5 GB
terminer le partionenement --> oui et faut il analyser un autre cd non
Belgique --> debian --> enter
Aller sur serveur ssh et faite enter
installer grub et choisir /dev/sda......
Connectez vous en root

Installez: 
apt-get update
apt-get install openssh-server
nano /etc/ssh/sshd_config
#Port 22 --> Port 4242
#PermitRootLogin prohibit-password --> PermitRootLogin yes 

Politique de mot de passe forte:
sudo apt-get -y install libpam-pwquality cracklib-runtime
nano /etc/login.defs
--> PASS_MAX_DAYS 30
--> PASS_MIN_DAYS 2
?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
 cron  
 • Un utilisateur sera présent avec pour nom votre login en plus de l’utilisateur root.
• Cet utilisateur appartiendra aux groupes user42 et sudo 
L’authentification en utilisant sudo sera limitée à 3 essais en cas de mot de passe
erroné.

Installez
apt-get install ufw
????????????????

Installez
apt-get install sudo
nano /etc/sudoers.d
???????????C
• Un message de votre choix s’affichera en cas d’erreur suite à un mauvais mot de
passe lors de l’utilisation de sudo.
• Chaque action utilisant sudo sera archivée, aussi bien les inputs que les outputs.
Le journal se trouvera dans le dossier /var/log/sudo/.
• Le mode TTY sera activé pour des questions de sécurité.
• Les paths utilisables par sudo seront restreints, là encore pour des questions de
sécurité. Exemple :
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????


Creer un fichier monitoring.sh
nano monitoring.sh
Exemple de script:

#!/bin/bash
var=`lvdisplay`

wall << End_Of_Message
        #Architecture: `uname -a`
        #CPU physical : `grep -c ^processor /proc/cpuinfo`
        #vCPU : `cat /proc/cpuinfo | grep processor | wc -l`
        `free -m | awk 'NR==2{printf "#Memory Usage: %s/%sMB (%.2f%%)\n", $3,$2,$3*100/$2 }'`
        `df -h | awk '$NF=="/"{printf "#Disk Usage: %.2f/%dGb (%s)\n", $3,$2,$5}'`
        #CPU load: `top -bn1 | grep load | awk '{printf "%.1f%%\t\t\n", $(NF-2)}'`
        #Last boot:`who -b |  cut -d 't' -f 3`
        #LVM use: `if [ -z "$var" ]
         then
                echo "no"
        else
                echo "yes"
        fi`
        #Connexions TCP :  `sed  </proc/net/tcp '/^ *[0-9]\+: [0-9A-F: ]\{27\} 01 /p;d' | wc -l` ESTABLISHED
        #User log: `who | cut -d " " -f 1 | sort -u | wc -l`
        #Network: IP `ip -4 addr show enp0s3 | awk '/inet/ {print $2}' | sed 's#/.*##'` (`cat /sys/class/net/$(ip route show default | awk '/default/ {print $5}')/address`)
        #Sudo : `grep -o -i COMMAND /var/log/sudo | wc -l` cmd
End_Of_Message

